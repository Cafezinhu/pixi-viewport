{"version":3,"file":"Clamp.js","sourceRoot":"","sources":["../../src/plugins/Clamp.ts"],"names":[],"mappings":"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","sourcesContent":["import { Point } from '@pixi/core';\nimport { Plugin } from './Plugin';\n\nimport type { Viewport } from '../Viewport';\n\n/**\n * There are three ways to clamp:\n * 1. direction: 'all' = the world is clamped to its world boundaries, ie, you cannot drag any part of the world offscreen\n *    direction: 'x' | 'y' = only the x or y direction is clamped to its world boundary\n * 2. left, right, top, bottom = true | number = the world is clamped to the world's pixel location for each side;\n *    if any of these are set to true, then the location is set to the boundary [0, viewport.worldWidth/viewport.worldHeight]\n *    eg: to allow the world to be completely dragged offscreen, set\n *    [-viewport.worldWidth, -viewport.worldHeight, viewport.worldWidth * 2, viewport.worldHeight * 2]\n *\n * Underflow determines what happens when the world is smaller than the viewport\n * 1. none = the world is clamped but there is no special behavior\n * 2. center = the world is centered on the viewport\n * 3. combination of top/bottom/center and left/right/center (case insensitive) =\n *    the world is stuck to the appropriate boundaries\n *\n */\nexport interface IClampOptions\n{\n    /**\n    * Clamp left; true = 0\n    *\n    * @default false\n    */\n    left?: number | boolean | null;\n\n    /**\n    * Clamp top; true = 0\n    *\n    * @default false\n    */\n    top?: number | boolean | null;\n\n    /**\n     * Clamp right; true = viewport.worldWidth\n     *\n     * @default false\n     */\n    right?: number | boolean | null;\n\n    /**\n     * Clamp bottom; true = viewport.worldHeight\n     *\n     * @default false\n     */\n    bottom?: number | boolean | null;\n\n    /**\n     * (all, x, or y) using clamps of [0, viewport.worldWidth/viewport.worldHeight]; replaces left/right/top/bottom if set\n     *\n     * @default null\n     */\n    direction?: 'all' | 'x' | 'y' | null;\n\n    /**\n     * Where to place world if too small for screen (e.g., top-right, center, none, bottomleft)\n     *\n     * @default 'center'\n     */\n    underflow?: 'center' | string;\n}\n\nconst DEFAULT_CLAMP_OPTIONS: Required<IClampOptions> = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false,\n    direction: null,\n    underflow: 'center'\n};\n\n/**\n * Plugin to clamp the viewport to a specific world bounding box.\n *\n * @public\n */\nexport class Clamp extends Plugin\n{\n    /** Options used to initialize this plugin, cannot be modified later. */\n    public readonly options: Required<IClampOptions>;\n\n    /** Last state of viewport */\n    protected last: {\n        x: number | null;\n        y: number | null;\n        scaleX: number | null;\n        scaleY: number | null;\n    };\n\n    protected noUnderflow!: boolean;\n    protected underflowX!: -1 | 0 | 1;\n    protected underflowY!: -1 | 0 | 1;\n\n    /**\n     * This is called by {@link Viewport.clamp}.\n     */\n    constructor(parent: Viewport, options : IClampOptions = {})\n    {\n        super(parent);\n        this.options = Object.assign({}, DEFAULT_CLAMP_OPTIONS, options);\n\n        if (this.options.direction)\n        {\n            this.options.left = this.options.direction === 'x' || this.options.direction === 'all' ? true : null;\n            this.options.right = this.options.direction === 'x' || this.options.direction === 'all' ? true : null;\n            this.options.top = this.options.direction === 'y' || this.options.direction === 'all' ? true : null;\n            this.options.bottom = this.options.direction === 'y' || this.options.direction === 'all' ? true : null;\n        }\n\n        this.parseUnderflow();\n        this.last = { x: null, y: null, scaleX: null, scaleY: null };\n        this.update();\n    }\n\n    private parseUnderflow()\n    {\n        const clamp = this.options.underflow.toLowerCase();\n\n        if (clamp === 'none')\n        {\n            this.noUnderflow = true;\n        }\n        else if (clamp === 'center')\n        {\n            this.underflowX = this.underflowY = 0;\n            this.noUnderflow = false;\n        }\n        else\n        {\n            // eslint-disable-next-line no-nested-ternary\n            this.underflowX = (clamp.indexOf('left') !== -1) ? -1 : (clamp.indexOf('right') !== -1) ? 1 : 0;\n            // eslint-disable-next-line no-nested-ternary\n            this.underflowY = (clamp.indexOf('top') !== -1) ? -1 : (clamp.indexOf('bottom') !== -1) ? 1 : 0;\n            this.noUnderflow = false;\n        }\n    }\n\n    public move(): boolean\n    {\n        this.update();\n\n        return false;\n    }\n\n    public update(): void\n    {\n        if (this.paused)\n        {\n            return;\n        }\n\n        // only clamp on change\n        if (this.parent.x === this.last.x\n            && this.parent.y === this.last.y\n            && this.parent.scale.x === this.last.scaleX\n            && this.parent.scale.y === this.last.scaleY)\n        {\n            return;\n        }\n        const original = new Point(this.parent.x, this.parent.y);\n        // TODO: Fix\n        const decelerate: any = (this.parent.plugins as any).decelerate || {};\n\n        if (this.options.left !== null || this.options.right !== null)\n        {\n            let moved = false;\n\n            if (!this.noUnderflow && this.parent.screenWorldWidth < this.parent.screenWidth)\n            {\n                switch (this.underflowX)\n                {\n                    case -1:\n                        if (this.parent.x !== 0)\n                        {\n                            this.parent.x = 0;\n                            moved = true;\n                        }\n                        break;\n                    case 1:\n                        if (this.parent.x !== this.parent.screenWidth - this.parent.screenWorldWidth)\n                        {\n                            this.parent.x = this.parent.screenWidth - this.parent.screenWorldWidth;\n                            moved = true;\n                        }\n                        break;\n                    default:\n                        if (this.parent.x !== (this.parent.screenWidth - this.parent.screenWorldWidth) / 2)\n                        {\n                            this.parent.x = (this.parent.screenWidth - this.parent.screenWorldWidth) / 2;\n                            moved = true;\n                        }\n                }\n            }\n            else\n            {\n                if (this.options.left !== null)\n                {\n                    if (this.parent.left < (this.options.left === true ? 0 : this.options.left))\n                    {\n                        this.parent.x = -(this.options.left === true ? 0 : this.options.left) * this.parent.scale.x;\n                        decelerate.x = 0;\n                        moved = true;\n                    }\n                }\n                if (this.options.right !== null)\n                {\n                    if (this.parent.right > (this.options.right === true ? this.parent.worldWidth : this.options.right))\n                    {\n                        this.parent.x = (-(this.options.right === true ? this.parent.worldWidth : this.options.right)\n                            * this.parent.scale.x) + this.parent.screenWidth;\n                        decelerate.x = 0;\n                        moved = true;\n                    }\n                }\n            }\n            if (moved)\n            {\n                this.parent.emit('moved', { viewport: this.parent, original, type: 'clamp-x' });\n            }\n        }\n        if (this.options.top !== null || this.options.bottom !== null)\n        {\n            let moved = false;\n\n            if (!this.noUnderflow && this.parent.screenWorldHeight < this.parent.screenHeight)\n            {\n                switch (this.underflowY)\n                {\n                    case -1:\n                        if (this.parent.y !== 0)\n                        {\n                            this.parent.y = 0;\n                            moved = true;\n                        }\n                        break;\n                    case 1:\n                        if (this.parent.y !== this.parent.screenHeight - this.parent.screenWorldHeight)\n                        {\n                            this.parent.y = (this.parent.screenHeight - this.parent.screenWorldHeight);\n                            moved = true;\n                        }\n                        break;\n                    default:\n                        if (this.parent.y !== (this.parent.screenHeight - this.parent.screenWorldHeight) / 2)\n                        {\n                            this.parent.y = (this.parent.screenHeight - this.parent.screenWorldHeight) / 2;\n                            moved = true;\n                        }\n                }\n            }\n            else\n            {\n                if (this.options.top !== null)\n                {\n                    if (this.parent.top < (this.options.top === true ? 0 : this.options.top))\n                    {\n                        this.parent.y = -(this.options.top === true ? 0 : this.options.top)\n                            * this.parent.scale.y;\n                        decelerate.y = 0;\n                        moved = true;\n                    }\n                }\n                if (this.options.bottom !== null)\n                {\n                    if (this.parent.bottom > (this.options.bottom === true ? this.parent.worldHeight : this.options.bottom))\n                    {\n                        this.parent.y = (-(this.options.bottom === true ? this.parent.worldHeight : this.options.bottom)\n                            * this.parent.scale.y) + this.parent.screenHeight;\n                        decelerate.y = 0;\n                        moved = true;\n                    }\n                }\n            }\n            if (moved)\n            {\n                this.parent.emit('moved', { viewport: this.parent, original, type: 'clamp-y' });\n            }\n        }\n        this.last.x = this.parent.x;\n        this.last.y = this.parent.y;\n        this.last.scaleX = this.parent.scale.x;\n        this.last.scaleY = this.parent.scale.y;\n    }\n\n    public reset(): void\n    {\n        this.update();\n    }\n}\n"]}