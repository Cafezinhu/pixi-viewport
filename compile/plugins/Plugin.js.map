{"version":3,"file":"Plugin.js","sourceRoot":"","sources":["../../src/plugins/Plugin.ts"],"names":[],"mappings":"AAQA,MAAM,OAAO,MAAM;IAcf,YAAY,MAAgB;QAExB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACxB,CAAC;IAGM,OAAO;IAGd,CAAC;IAGM,IAAI,CAAC,EAAkB;QAE1B,OAAO,KAAK,CAAC;IACjB,CAAC;IAGM,IAAI,CAAC,EAAkB;QAE1B,OAAO,KAAK,CAAC;IACjB,CAAC;IAGM,EAAE,CAAC,EAAkB;QAExB,OAAO,KAAK,CAAC;IACjB,CAAC;IAGM,KAAK,CAAC,EAAc;QAEvB,OAAO,KAAK,CAAC;IACjB,CAAC;IAMM,MAAM,CAAC,MAAc;IAG5B,CAAC;IAGM,MAAM;IAGb,CAAC;IAGM,KAAK;IAGZ,CAAC;IAGM,KAAK;QAER,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACvB,CAAC;IAGM,MAAM;QAET,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACxB,CAAC;CACJ","sourcesContent":["import type { FederatedEvent } from '@pixi/events';\nimport type { Viewport } from '../Viewport';\n\n/**\n * Derive this class to create user-defined plugins\n *\n * @public\n */\nexport class Plugin\n{\n    /** The viewport to which this plugin is attached. */\n    public readonly parent: Viewport;\n\n    /**\n     * Flags whether this plugin has been \"paused\".\n     *\n     * @see Plugin#pause\n     * @see Plugin#resume\n     */\n    public paused: boolean;\n\n    /** @param {Viewport} parent */\n    constructor(parent: Viewport)\n    {\n        this.parent = parent;\n        this.paused = false;\n    }\n\n    /** Called when plugin is removed */\n    public destroy()\n    {\n        // Override for implementation\n    }\n\n    /** Handler for pointerdown PIXI event */\n    public down(_e: FederatedEvent): boolean\n    {\n        return false;\n    }\n\n    /** Handler for pointermove PIXI event */\n    public move(_e: FederatedEvent): boolean\n    {\n        return false;\n    }\n\n    /** Handler for pointerup PIXI event */\n    public up(_e: FederatedEvent): boolean\n    {\n        return false;\n    }\n\n    /** Handler for wheel event on div */\n    public wheel(_e: WheelEvent): boolean | undefined\n    {\n        return false;\n    }\n\n    /**\n     * Called on each tick\n     * @param {number} elapsed time in millisecond since last update\n     */\n    public update(_delta: number): void\n    {\n        // Override for implementation\n    }\n\n    /** Called when the viewport is resized */\n    public resize()\n    {\n        // Override for implementation\n    }\n\n    /** Called when the viewport is manually moved */\n    public reset(): void\n    {\n        // Override for implementation\n    }\n\n    /** Pause the plugin */\n    public pause(): void\n    {\n        this.paused = true;\n    }\n\n    /** Un-pause the plugin */\n    public resume(): void\n    {\n        this.paused = false;\n    }\n}\n"]}