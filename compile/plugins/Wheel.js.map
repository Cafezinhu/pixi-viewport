{"version":3,"file":"Wheel.js","sourceRoot":"","sources":["../../src/plugins/Wheel.ts"],"names":[],"mappings":"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","sourcesContent":["import { Plugin } from './Plugin';\nimport { IPointData, Point } from '@pixi/core';\n\nimport type { Viewport } from '../Viewport';\n\n/** Options for {@link Wheel}. */\nexport interface IWheelOptions\n{\n    /**\n     * Percent to scroll with each spin\n     *\n     * @default 0.1\n     */\n    percent?: number;\n\n    /**\n     * smooth the zooming by providing the number of frames to zoom between wheel spins\n     *\n     * @default false\n     */\n    smooth?: false | number;\n\n    /**\n     * Stop smoothing with any user input on the viewport\n     *\n     * @default true\n     */\n    interrupt?: boolean;\n\n    /**\n     * Reverse the direction of the scroll\n     *\n     * @default false\n     */\n    reverse?: boolean;\n\n    /**\n     * Place this point at center during zoom instead of current mouse position\n     *\n     * @default null\n     */\n    center?: Point | null;\n\n    /**\n     * Scaling factor for non-DOM_DELTA_PIXEL scrolling events\n     *\n     * @default 20\n     */\n    lineHeight?: number;\n\n    /**\n     * Axis to zoom\n     *\n     * @default 'all'\n     */\n    axis?: 'all' | 'x' | 'y';\n\n    /**\n     * Array containing {@link key|https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code} codes of\n     * keys that can be pressed for the zoom to be triggered, e.g.: ['ShiftLeft', 'ShiftRight'}.\n     *\n     * @default null\n     */\n    keyToPress?: string[] | null;\n\n    /**\n     * pinch the trackpad to zoom\n     */\n    trackpadPinch?: boolean;\n\n    /**\n     * zooms on wheel spin (use this as an alternative to drag.options.wheel)\n     */\n    wheelZoom?: boolean;\n}\n\nconst DEFAULT_WHEEL_OPTIONS: Required<IWheelOptions> = {\n    percent: 0.1,\n    smooth: false,\n    interrupt: true,\n    reverse: false,\n    center: null,\n    lineHeight: 20,\n    axis: 'all',\n    keyToPress: null,\n    trackpadPinch: false,\n    wheelZoom: true,\n};\n\n/**\n * Plugin for handling wheel scrolling for viewport zoom.\n *\n * @event wheel-start({event, viewport})\n */\nexport class Wheel extends Plugin\n{\n    public readonly options: Required<IWheelOptions>;\n\n    protected smoothing?: IPointData | null;\n    protected smoothingCenter?: Point | null;\n    protected smoothingCount?: number;\n\n    /** Flags whether the keys required to zoom are pressed currently. */\n    protected keyIsPressed: boolean;\n\n    /**\n     * This is called by {@link Viewport.wheel}.\n     */\n    constructor(parent: Viewport, options: IWheelOptions = {})\n    {\n        super(parent);\n        this.options = Object.assign({}, DEFAULT_WHEEL_OPTIONS, options);\n        this.keyIsPressed = false;\n\n        if (this.options.keyToPress)\n        {\n            this.handleKeyPresses(this.options.keyToPress);\n        }\n    }\n\n    /**\n     * Handles keypress events and set the keyIsPressed boolean accordingly\n     *\n     * @param {array} codes - key codes that can be used to trigger zoom event\n     */\n    protected handleKeyPresses(codes: string[]): void\n    {\n        window.addEventListener('keydown', (e) =>\n        {\n            if (codes.includes(e.code))\n            {\n                this.keyIsPressed = true;\n            }\n        });\n\n        window.addEventListener('keyup', (e) =>\n        {\n            if (codes.includes(e.code))\n            {\n                this.keyIsPressed = false;\n            }\n        });\n    }\n\n    protected checkKeyPress(): boolean\n    {\n        return !this.options.keyToPress || this.keyIsPressed;\n    }\n\n    public down(): boolean\n    {\n        if (this.options.interrupt)\n        {\n            this.smoothing = null;\n        }\n\n        return false;\n    }\n\n    protected isAxisX(): boolean\n    {\n        return ['all', 'x'].includes(this.options.axis);\n    }\n\n    protected isAxisY(): boolean\n    {\n        return ['all', 'y'].includes(this.options.axis);\n    }\n\n    public update(): void\n    {\n        if (this.smoothing)\n        {\n            const point = this.smoothingCenter;\n            const change = this.smoothing;\n            let oldPoint;\n\n            if (!this.options.center)\n            {\n                oldPoint = this.parent.toLocal(point as IPointData);\n            }\n            if (this.isAxisX())\n            {\n                this.parent.scale.x += change.x;\n            }\n            if (this.isAxisY())\n            {\n                this.parent.scale.y += change.y;\n            }\n\n            this.parent.emit('zoomed', { viewport: this.parent, type: 'wheel' });\n            const clamp = this.parent.plugins.get('clamp-zoom', true);\n\n            if (clamp)\n            {\n                clamp.clamp();\n            }\n            if (this.options.center)\n            {\n                this.parent.moveCenter(this.options.center);\n            }\n            else\n            {\n                const newPoint = this.parent.toGlobal(oldPoint as IPointData);\n\n                this.parent.x += (point as IPointData).x - newPoint.x;\n                this.parent.y += (point as IPointData).y - newPoint.y;\n            }\n\n            this.parent.emit('moved', { viewport: this.parent, type: 'wheel' });\n            (this.smoothingCount as number)++;\n\n            if ((this.smoothingCount as number) >= this.options.smooth)\n            {\n                this.smoothing = null;\n            }\n        }\n    }\n\n    private pinch(e: WheelEvent)\n    {\n        if (this.paused)\n        {\n            return;\n        }\n\n        const point = this.parent.input.getPointerPosition(e);\n        const step = -e.deltaY * (e.deltaMode ? this.options.lineHeight : 1) / 200;\n        const change = Math.pow(2, (1 + this.options.percent) * step);\n\n        let oldPoint: IPointData | undefined;\n\n        if (!this.options.center)\n        {\n            oldPoint = this.parent.toLocal(point);\n        }\n        if (this.isAxisX())\n        {\n            this.parent.scale.x *= change;\n        }\n        if (this.isAxisY())\n        {\n            this.parent.scale.y *= change;\n        }\n        this.parent.emit('zoomed', { viewport: this.parent, type: 'wheel' });\n        const clamp = this.parent.plugins.get('clamp-zoom', true);\n\n        if (clamp)\n        {\n            clamp.clamp();\n        }\n        if (this.options.center)\n        {\n            this.parent.moveCenter(this.options.center);\n        }\n        else\n        {\n            const newPoint = this.parent.toGlobal(oldPoint as IPointData);\n\n            this.parent.x += point.x - newPoint.x;\n            this.parent.y += point.y - newPoint.y;\n        }\n        this.parent.emit('moved', { viewport: this.parent, type: 'wheel' });\n        this.parent.emit('wheel-start',\n            { event: e, viewport: this.parent });\n    }\n\n    public wheel(e: WheelEvent): boolean\n    {\n        if (this.paused)\n        {\n            return false;\n        }\n\n        if (!this.checkKeyPress())\n        {\n            return false;\n        }\n\n        if (e.ctrlKey && this.options.trackpadPinch)\n        {\n            this.pinch(e);\n        }\n        else if (this.options.wheelZoom)\n        {\n            const point = this.parent.input.getPointerPosition(e);\n            const sign = this.options.reverse ? -1 : 1;\n            const step = sign * -e.deltaY * (e.deltaMode ? this.options.lineHeight : 1) / 500;\n            const change = Math.pow(2, (1 + this.options.percent) * step);\n\n            if (this.options.smooth)\n            {\n                const original = {\n                    x: this.smoothing ? this.smoothing.x * (this.options.smooth - (this.smoothingCount as number)) : 0,\n                    y: this.smoothing ? this.smoothing.y * (this.options.smooth - (this.smoothingCount as number)) : 0\n                };\n\n                this.smoothing = {\n                    x: (((this.parent.scale.x + original.x) * change) - this.parent.scale.x) / this.options.smooth,\n                    y: (((this.parent.scale.y + original.y) * change) - this.parent.scale.y) / this.options.smooth,\n                };\n                this.smoothingCount = 0;\n                this.smoothingCenter = point;\n            }\n            else\n            {\n                let oldPoint: IPointData | undefined;\n\n                if (!this.options.center)\n                {\n                    oldPoint = this.parent.toLocal(point);\n                }\n                if (this.isAxisX())\n                {\n                    this.parent.scale.x *= change;\n                }\n                if (this.isAxisY())\n                {\n                    this.parent.scale.y *= change;\n                }\n                this.parent.emit('zoomed', { viewport: this.parent, type: 'wheel' });\n                const clamp = this.parent.plugins.get('clamp-zoom', true);\n\n                if (clamp)\n                {\n                    clamp.clamp();\n                }\n                if (this.options.center)\n                {\n                    this.parent.moveCenter(this.options.center);\n                }\n                else\n                {\n                    const newPoint = this.parent.toGlobal(oldPoint as IPointData);\n\n                    this.parent.x += point.x - newPoint.x;\n                    this.parent.y += point.y - newPoint.y;\n                }\n            }\n\n            this.parent.emit('moved', { viewport: this.parent, type: 'wheel' });\n            this.parent.emit('wheel-start',\n                { event: e, viewport: this.parent });\n        }\n\n        return !this.parent.options.passiveWheel;\n    }\n}\n"]}