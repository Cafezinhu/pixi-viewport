{"version":3,"file":"ClampZoom.js","sourceRoot":"","sources":["../../src/plugins/ClampZoom.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,UAAU,CAAC;AA8BlC,MAAM,0BAA0B,GAAgC;IAC5D,QAAQ,EAAE,IAAI;IACd,SAAS,EAAE,IAAI;IACf,QAAQ,EAAE,IAAI;IACd,SAAS,EAAE,IAAI;IACf,QAAQ,EAAE,IAAI;IACd,QAAQ,EAAE,IAAI;CACjB,CAAC;AAOF,MAAM,OAAO,SAAU,SAAQ,MAAM;IAOjC,YAAY,MAAgB,EAAE,OAAO,GAAG,EAAE;QAEtC,KAAK,CAAC,MAAM,CAAC,CAAC;QACd,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,0BAA0B,EAAE,OAAO,CAAC,CAAC;QAEtE,IAAI,CAAC,KAAK,EAAE,CAAC;IACjB,CAAC;IAEM,MAAM;QAET,IAAI,CAAC,KAAK,EAAE,CAAC;IACjB,CAAC;IAGM,KAAK;QAER,IAAI,IAAI,CAAC,MAAM,EACf;YACI,OAAO;SACV;QAED,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,EACtG;YACI,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC;YACzC,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC;YAE3C,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,KAAK,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EACnE;gBACI,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBAErC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;gBAChE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,QAAQ,CAAC;gBACtD,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC;gBACrC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC;gBACvC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC;aAC7E;YACD,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,KAAK,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EACnE;gBACI,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBAErC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;gBAChE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,QAAQ,CAAC;gBACtD,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC;gBACrC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC;gBACvC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC;aAC7E;YACD,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,KAAK,IAAI,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,EACtE;gBACI,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBAErC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;gBAClE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,QAAQ,CAAC;gBACtD,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC;gBACrC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC;gBACvC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC;aAC7E;YACD,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,KAAK,IAAI,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,EACtE;gBACI,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBAErC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;gBAClE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,QAAQ,CAAC;gBACtD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC;aAC7E;SACJ;aAED,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,EAClD;YACI,MAAM,QAAQ,GAAW,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC;YAC9C,MAAM,QAAQ,GAAW,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC;YAE9C,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,KAAK,QAAQ,EAC7C;gBACI,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;gBACnC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;aACtC;iBACI,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,KAAK,IAAI,EACvC;gBACI,MAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,QAAkB,CAAC;gBAErD,QAAQ,CAAC,CAAC,GAAG,OAAO,YAAY,CAAC,CAAC,KAAK,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;gBAC3E,QAAQ,CAAC,CAAC,GAAG,OAAO,YAAY,CAAC,CAAC,KAAK,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;aAC9E;YAED,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,KAAK,QAAQ,EAC7C;gBACI,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;gBACnC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;aACtC;iBACI,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,KAAK,IAAI,EACvC;gBACI,MAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,QAAkB,CAAC;gBAErD,QAAQ,CAAC,CAAC,GAAG,OAAO,YAAY,CAAC,CAAC,KAAK,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;gBAC3E,QAAQ,CAAC,CAAC,GAAG,OAAO,YAAY,CAAC,CAAC,KAAK,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;aAC9E;YAED,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;YACjC,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;YAEjC,IAAI,QAAQ,CAAC,CAAC,KAAK,IAAI,IAAI,MAAM,GAAG,QAAQ,CAAC,CAAC,EAC9C;gBACI,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC;aACvB;YACD,IAAI,QAAQ,CAAC,CAAC,KAAK,IAAI,IAAI,MAAM,GAAG,QAAQ,CAAC,CAAC,EAC9C;gBACI,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC;aACvB;YACD,IAAI,QAAQ,CAAC,CAAC,KAAK,IAAI,IAAI,MAAM,GAAG,QAAQ,CAAC,CAAC,EAC9C;gBACI,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC;aACvB;YACD,IAAI,QAAQ,CAAC,CAAC,KAAK,IAAI,IAAI,MAAM,GAAG,QAAQ,CAAC,CAAC,EAC9C;gBACI,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC;aACvB;YACD,IAAI,MAAM,KAAK,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,MAAM,KAAK,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EACpE;gBACI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;gBACtC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC;aAC7E;SACJ;IACL,CAAC;IAEM,KAAK;QAER,IAAI,CAAC,KAAK,EAAE,CAAC;IACjB,CAAC;CACJ","sourcesContent":["import { Plugin } from './Plugin';\n\nimport type { Viewport } from '../Viewport';\n\n/**\n * Options for {@link ClampZoom}.\n *\n * Use either minimum width/height or minimum scale\n */\nexport interface IClampZoomOptions\n{\n    /** Minimum width */\n    minWidth?: number | null;\n\n    /** Minimum height */\n    minHeight?: number | null;\n\n    /** Maximum width */\n    maxWidth?: number | null;\n\n    /** Maximum height */\n    maxHeight?: number | null;\n\n    /** Minimum scale */\n    minScale?: number | null | IScale;\n\n    /** Maximum scale */\n    maxScale?: number | null | IScale;\n}\n\nconst DEFAULT_CLAMP_ZOOM_OPTIONS: Required<IClampZoomOptions> = {\n    minWidth: null,\n    minHeight: null,\n    maxWidth: null,\n    maxHeight: null,\n    minScale: null,\n    maxScale: null\n};\n\n/**\n * Plugin to clamp the viewport's zoom to a specific range.\n *\n * @public\n */\nexport class ClampZoom extends Plugin\n{\n    public readonly options: Required<IClampZoomOptions>;\n\n    /**\n     * This is called by {@link Viewport.clampZoom}.\n     */\n    constructor(parent: Viewport, options = {})\n    {\n        super(parent);\n        this.options = Object.assign({}, DEFAULT_CLAMP_ZOOM_OPTIONS, options);\n\n        this.clamp();\n    }\n\n    public resize(): void\n    {\n        this.clamp();\n    }\n\n    /** Clamp the viewport scale zoom) */\n    public clamp(): void\n    {\n        if (this.paused)\n        {\n            return;\n        }\n\n        if (this.options.minWidth || this.options.minHeight || this.options.maxWidth || this.options.maxHeight)\n        {\n            let width = this.parent.worldScreenWidth;\n            let height = this.parent.worldScreenHeight;\n\n            if (this.options.minWidth !== null && width < this.options.minWidth)\n            {\n                const original = this.parent.scale.x;\n\n                this.parent.fitWidth(this.options.minWidth, false, false, true);\n                this.parent.scale.y *= this.parent.scale.x / original;\n                width = this.parent.worldScreenWidth;\n                height = this.parent.worldScreenHeight;\n                this.parent.emit('zoomed', { viewport: this.parent, type: 'clamp-zoom' });\n            }\n            if (this.options.maxWidth !== null && width > this.options.maxWidth)\n            {\n                const original = this.parent.scale.x;\n\n                this.parent.fitWidth(this.options.maxWidth, false, false, true);\n                this.parent.scale.y *= this.parent.scale.x / original;\n                width = this.parent.worldScreenWidth;\n                height = this.parent.worldScreenHeight;\n                this.parent.emit('zoomed', { viewport: this.parent, type: 'clamp-zoom' });\n            }\n            if (this.options.minHeight !== null && height < this.options.minHeight)\n            {\n                const original = this.parent.scale.y;\n\n                this.parent.fitHeight(this.options.minHeight, false, false, true);\n                this.parent.scale.x *= this.parent.scale.y / original;\n                width = this.parent.worldScreenWidth;\n                height = this.parent.worldScreenHeight;\n                this.parent.emit('zoomed', { viewport: this.parent, type: 'clamp-zoom' });\n            }\n            if (this.options.maxHeight !== null && height > this.options.maxHeight)\n            {\n                const original = this.parent.scale.y;\n\n                this.parent.fitHeight(this.options.maxHeight, false, false, true);\n                this.parent.scale.x *= this.parent.scale.y / original;\n                this.parent.emit('zoomed', { viewport: this.parent, type: 'clamp-zoom' });\n            }\n        }\n        else\n        if (this.options.minScale || this.options.maxScale)\n        {\n            const minScale: IScale = { x: null, y: null };\n            const maxScale: IScale = { x: null, y: null };\n\n            if (typeof this.options.minScale === 'number')\n            {\n                minScale.x = this.options.minScale;\n                minScale.y = this.options.minScale;\n            }\n            else if (this.options.minScale !== null)\n            {\n                const optsMinScale = this.options.minScale as IScale;\n\n                minScale.x = typeof optsMinScale.x === 'undefined' ? null : optsMinScale.x;\n                minScale.y = typeof optsMinScale.y === 'undefined' ? null : optsMinScale.y;\n            }\n\n            if (typeof this.options.maxScale === 'number')\n            {\n                maxScale.x = this.options.maxScale;\n                maxScale.y = this.options.maxScale;\n            }\n            else if (this.options.maxScale !== null)\n            {\n                const optsMaxScale = this.options.maxScale as IScale;\n\n                maxScale.x = typeof optsMaxScale.x === 'undefined' ? null : optsMaxScale.x;\n                maxScale.y = typeof optsMaxScale.y === 'undefined' ? null : optsMaxScale.y;\n            }\n\n            let scaleX = this.parent.scale.x;\n            let scaleY = this.parent.scale.y;\n\n            if (minScale.x !== null && scaleX < minScale.x)\n            {\n                scaleX = minScale.x;\n            }\n            if (maxScale.x !== null && scaleX > maxScale.x)\n            {\n                scaleX = maxScale.x;\n            }\n            if (minScale.y !== null && scaleY < minScale.y)\n            {\n                scaleY = minScale.y;\n            }\n            if (maxScale.y !== null && scaleY > maxScale.y)\n            {\n                scaleY = maxScale.y;\n            }\n            if (scaleX !== this.parent.scale.x || scaleY !== this.parent.scale.y)\n            {\n                this.parent.scale.set(scaleX, scaleY);\n                this.parent.emit('zoomed', { viewport: this.parent, type: 'clamp-zoom' });\n            }\n        }\n    }\n\n    public reset(): void\n    {\n        this.clamp();\n    }\n}\n\n/** This allows independent x and y values for min/maxScale */\nexport interface IScale\n{\n    x: null | number\n    y: null | number\n}\n"]}